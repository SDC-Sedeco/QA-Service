version: "3.8"

services:
  nginx:
    restart: always
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: nginx.Dockerfile
    depends_on:
      - qa-server
      - qa-server-2
    ports:
      - "80:80"
    # volumes:
    #   - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  qa-server:
    image: laweeza/qa-service:latest
    container_name: qa-server
    restart: unless-stopped
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "8083:80"
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_P\
        ORT}/${POSTGRES_DATABASE}"
      NODE_ENV: development
  qa-server-2:
    image: laweeza/qa-service:latest
    container_name: qa-server-2
    restart: unless-stopped
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "8082:80"
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_P\
        ORT}/${POSTGRES_DATABASE}"
      NODE_ENV: development
  db:
    image: postgres:14.0
    container_name: db
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./pg-data:/var/lib/postgresql/data

volumes:
  pg-data:
    external: false
